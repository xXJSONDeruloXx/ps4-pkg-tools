name: Create Release

# Initially running on pull requests for validation
# Later we can change this to only run on pushes to main branch
on:
  pull_request:
    branches: [ main ]
  # Allow manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  # This job requires the build jobs to complete first
  create-release:
    name: Create Release
    # Only run after both build jobs have completed successfully
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        # Extract version from CMakeLists.txt or use the PR number as fallback
        run: |
          VERSION=$(grep -oP 'project\(ps4-pkg-tools VERSION \K[0-9]+\.[0-9]+\.[0-9]+' CMakeLists.txt || echo "0.1.0")
          PR_NUMBER=$(echo $GITHUB_REF | grep -oP 'refs/pull/\K[0-9]+')
          if [ -n "$PR_NUMBER" ]; then
            echo "::set-output name=version::${VERSION}-pr${PR_NUMBER}"
          else
            echo "::set-output name=version::${VERSION}"
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: PS4-PKG-Tools v${{ steps.get_version.outputs.version }}
          body: |
            PS4-PKG-Tools version ${{ steps.get_version.outputs.version }}
            
            Automated release build from GitHub Actions.
            
            This release includes binaries for:
            - macOS
            - Linux
          draft: true
          prerelease: ${{ github.event_name == 'pull_request' }}

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: ps4-pkg-tool-macos
          path: ./artifacts/macos

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ps4-pkg-tool-linux
          path: ./artifacts/linux

      - name: Package macOS binary
        run: |
          cd ./artifacts/macos
          chmod +x ps4-pkg-tool
          zip -r ../../ps4-pkg-tool-macos.zip ps4-pkg-tool
          cd ../..

      - name: Package Linux binary
        run: |
          cd ./artifacts/linux
          chmod +x ps4-pkg-tool
          tar -czvf ../../ps4-pkg-tool-linux.tar.gz ps4-pkg-tool
          cd ../..

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ps4-pkg-tool-macos.zip
          asset_name: ps4-pkg-tool-macos.zip
          asset_content_type: application/zip

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ps4-pkg-tool-linux.tar.gz
          asset_name: ps4-pkg-tool-linux.tar.gz
          asset_content_type: application/gzip

# Include the build jobs from build.yml so that the workflow is self-contained
# This ensures the release job has access to the build artifacts
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
      - name: Install dependencies
        run: |
          brew install cmake
          # Add other dependencies your project needs
      
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake -DBUILD_PKG_TOOL=ON -DCMAKE_CXX_STANDARD=23 ..
          make -j$(sysctl -n hw.ncpu)
      
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ps4-pkg-tool-macos
          path: build/ps4-pkg-tool

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev zlib1g-dev
          
          # Install newer CMake version (3.24+)
          wget https://github.com/Kitware/CMake/releases/download/v3.28.3/cmake-3.28.3-linux-x86_64.sh -O cmake-installer.sh
          chmod +x cmake-installer.sh
          sudo mkdir -p /opt/cmake
          sudo ./cmake-installer.sh --skip-license --prefix=/opt/cmake
          sudo ln -sf /opt/cmake/bin/cmake /usr/local/bin/cmake
          cmake --version
          
          # Install a newer gcc/g++ with C++23 support
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-13 g++-13
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100
          gcc --version
          g++ --version
      
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake -DBUILD_PKG_TOOL=ON -DCMAKE_CXX_STANDARD=23 ..
          make -j$(nproc)
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: ps4-pkg-tool-linux
          path: build/ps4-pkg-tool